module UserAdmin where

import Token
import Payment

-- type TokenOfferId = ContractId TokenOffer
-- type TokenId = ContractId Token
-- type PaybaleId = ContractId Payable

template Issuer
    with
        userAdmin: Party
        issuer: Party
    where
        signatory userAdmin
        observer issuer

        nonconsuming choice MintToken: ContractId Token
            with
                description: Text
                initialPrice: Decimal
                currency: Text
                royaltyRate: Decimal
            controller issuer
            do
                issued <- getTime
                create Token
                    with
                        lastPrice = initialPrice
                        owner = issuer
                        ..

        choice RevokeIssuer: ()
            controller userAdmin
            do return ()

template IssuerRequest
    with
        userAdmin: Party
        issuer: Party
        reason: Text
    where
        signatory issuer
        observer userAdmin

        choice GrantIssuerRights: ContractId Issuer
            controller userAdmin
            do
                create Issuer with ..
        
        choice RejectIssuerRequest: ()
            controller userAdmin
            do return ()

template Owner
    with
        userAdmin: Party
        owner: Party
    where
        signatory userAdmin
        observer owner

        nonconsuming choice AcceptTokenAsNewOwner: (TokenId, PayableId, Optional (PayableId))
            with
                offerId: TokenOfferId
            controller owner
            do
                exercise offerId AcceptToken
        
        nonconsuming choice AcceptTokenByKey: (TokenId, PayableId, Optional (PayableId))
            with
                issuer: Party
                currentOwner: Party
                description: Text
            controller owner
            do
                exerciseByKey @TokenOffer (issuer, currentOwner, description) AcceptToken
        
        choice RevokeOwner: ()
            controller userAdmin
            do return ()

template OwnerRequest
    with
        userAdmin: Party
        owner: Party
        reason: Text
    where
        signatory owner
        observer userAdmin

        choice GrantOwnerRights: ContractId Owner
            controller userAdmin
            do
                create Owner with ..

        choice RejectOwnerRequest: ()
            controller userAdmin
            do return ()    